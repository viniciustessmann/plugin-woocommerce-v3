$mantis ?= {}
$mantis.toolkit = {
	path: {
		base: '../'
	}
}
$mantis.toolkit.path.font = pathjoin($mantis.toolkit.path.base, 'fonts')
$mantis.toolkit.path.img = pathjoin($mantis.toolkit.path.base, 'img')
$mantis.toolkit.path.bg = pathjoin($mantis.toolkit.path.img, 'backgrounds')


/*
 * Convert PX to REM
 */

rem(u)
	return unit(u/16, 'rem')


/*
 * Concat
 */

concat()
	return split(' ', join(' ', arguments))


/*
 * URL Functions
 */

urlFont($file)
	url(pathjoin($mantis.toolkit.path.font, $file))

urlImg($file, $dir = '/')
	url(pathjoin($mantis.toolkit.path.img, $dir, $file))

urlBg($file)
	url(pathjoin($mantis.toolkit.path.bg, $file))


/*
 * @font-face
 */

font-face($family, $file, $weight = 'normal', $style = 'normal')
	@font-face
		font-family $family
		font-weight $weight
		font-style $style
		src urlFont($file + '.woff') format('woff')


/*
 * Font-size (PX to REM)
 */

font-size($value, $important = null)
	if typeof($value) is 'unit' && unit($value) is ''
		$value = rem($value)

	font-size $value $important


/*
 * Position
 */

position($position, $important = null)
	if $position is center
		position absolute $important
		top 50% $important
		left 50% $important
		transform translate(-50%, -50%) $important
	else
		position $position $important

// Position aliases
_position($position, $args)
	$i = 0

	position unquote($position)

	for $j in (1..4)
		if length($args) > $i
			{$args[$i]} $args[$i + 1] is a 'unit' ? $args[$i += 1] : 0

		$i += 1

absolute()
	_position('absolute', arguments)

fixed()
	_position('fixed', arguments)

relative()
	_position('relative', arguments)

sticky()
	_position('sticky', arguments)


/*
 * Size
 */

size($args...)
	$fn-name = fn-name()
	$prefix = length(split('', $fn-name)) > 4 ? substr($fn-name, 0, 4) : null
	$width = $args[0]
	$height = $args[1] || $width
	$important = $args[2] || null

	if last($args) is !important && length($args) is 2
		$important = $height
		$height = $width

	{$prefix}width $width $important
	{$prefix}height $height $important

min-size = max-size = size


/*
 * Visible
 */

visible($status, $important = null)
	opacity $status ? 1 : 0 $important
	visibility $status ? visible : hidden $important
